allprojects {
	apply plugin: 'io.pry.gradle.offline_dependencies'
	offlineDependencies {
		repositories {
			mavenCentral()
			gradlePluginPortal()
		}
		includeSources = false
		includeJavadocs = false
		includePoms = true
		includeIvyXmls = false
		includeBuildscriptDependencies = true
	}
}

tasks.register('copyLocalGradleWrapper', Copy) {
	description = 'Copy the currently referenced Gradle version from the Gradle home for offline usage to save bandwidth'
	def gradleName = "gradle-${tasks.wrapper.gradleVersion}-" + "${tasks.wrapper.distributionType}".toLowerCase()
	into layout.buildDirectory
	from("${gradle.gradleUserHomeDir}/wrapper/dists/${gradleName}/") {
		include "*/${gradleName}.zip"
	}
	eachFile {
		path = name
	}
	includeEmptyDirs = false
	onlyIf {
		!fileTree(dir: "${gradle.gradleUserHomeDir}/wrapper/dists/${gradleName}", include: "*/${gradleName}.zip.ok").empty
	}
}

tasks.register('downloadGradleVersion', DownloadFileTask) {
	description = 'Download the currently referenced Gradle version for offline usage'
	dependsOn copyLocalGradleWrapper
	url = tasks.wrapper.distributionUrl
	def gradleName = "gradle-${tasks.wrapper.gradleVersion}-" + "${tasks.wrapper.distributionType}".toLowerCase()
	destinationFile = layout.buildDirectory.file("${gradleName}.zip").get().asFile
	onlyIf {
		!destinationFile.exists()
	}
}

tasks.register('createGitArchive', Exec) {
	description = 'Create a source archive suitable for https://build.opensuse.org/'
	commandLine "git", "archive", "--output=${layout.buildDirectory.get().asFile.path}/${project.name}-${version}-src.tar.gz", "--prefix=${project.name}-${project.version}/", "HEAD"
	doFirst {
		layout.buildDirectory.get().asFile.mkdirs()
	}
}

tasks.register('createOfflineRepositoryArchive', Tar) {
	description = 'Create an archive of the offline repository for use in https://build.opensuse.org/'
	dependsOn updateOfflineRepository
	archiveFileName = "offline-repository.tar.gz"
	into("offline-repository") {
		from "offline-repository"
		include "**/*"
	}
	destinationDirectory = project.buildDir
	compression = Compression.GZIP
}

gradle.projectsEvaluated {
	subprojects {
		rootProject.tasks.createOfflineRepositoryArchive.dependsOn it.tasks.getByName("updateOfflineRepository")
	}
}

tasks.register('prepareObsBuild', DefaultTask) {
	description = 'Prepare stuff for building FullSync releases on https://build.opensuse.org/'
	dependsOn createOfflineRepositoryArchive
	dependsOn createGitArchive
	dependsOn downloadGradleVersion
}

class DownloadFileTask extends DefaultTask {
	@Input
	String url

	@OutputFile
	File destinationFile

	@TaskAction
	def downloadFile() {
		destinationFile.bytes = new URL(url).bytes
	}
}
